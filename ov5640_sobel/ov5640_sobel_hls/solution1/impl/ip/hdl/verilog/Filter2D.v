// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state5 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_rows_V_read;
input  [31:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1393;
reg   [0:0] or_cond_i_i_reg_1402;
reg   [0:0] icmp_reg_1358;
reg   [0:0] tmp_5_reg_1349;
reg    p_dst_data_stream_V_blk_n;
reg   [0:0] or_cond_i_reg_1438;
reg   [31:0] t_V_2_reg_277;
wire   [31:0] tmp_s_fu_288_p2;
reg   [31:0] tmp_s_reg_1306;
wire   [31:0] tmp_1_fu_294_p2;
reg   [31:0] tmp_1_reg_1311;
wire   [31:0] p_neg465_i_fu_300_p2;
reg   [31:0] p_neg465_i_reg_1316;
wire   [31:0] tmp_2_fu_306_p2;
reg   [31:0] tmp_2_reg_1323;
wire   [31:0] tmp_4_fu_318_p2;
reg   [31:0] tmp_4_reg_1328;
wire   [31:0] tmp_8_fu_330_p2;
reg   [31:0] tmp_8_reg_1335;
wire   [0:0] exitcond461_i_fu_336_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] i_V_fu_341_p2;
reg   [31:0] i_V_reg_1344;
wire   [0:0] tmp_5_fu_347_p2;
wire   [0:0] tmp_70_0_not_fu_352_p2;
reg   [0:0] tmp_70_0_not_reg_1353;
wire   [0:0] icmp_fu_368_p2;
wire   [0:0] tmp_12_fu_374_p2;
reg   [0:0] tmp_12_reg_1363;
wire   [0:0] tmp_114_1_fu_380_p2;
reg   [0:0] tmp_114_1_reg_1367;
wire   [0:0] tmp_13_fu_386_p2;
reg   [0:0] tmp_13_reg_1371;
wire   [1:0] tmp_23_fu_601_p1;
reg   [1:0] tmp_23_reg_1378;
wire   [1:0] tmp_24_fu_626_p1;
reg   [1:0] tmp_24_reg_1383;
wire   [1:0] tmp_32_fu_651_p1;
reg   [1:0] tmp_32_reg_1388;
wire   [0:0] exitcond460_i_fu_655_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op154_read_state4;
reg    ap_predicate_op165_read_state4;
reg    ap_predicate_op218_write_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] j_V_fu_660_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_707_p2;
wire   [0:0] brmerge_fu_784_p2;
reg   [0:0] brmerge_reg_1406;
reg   [10:0] k_buf_0_val_3_addr_reg_1413;
wire   [1:0] tmp_37_fu_796_p1;
reg   [1:0] tmp_37_reg_1419;
reg   [10:0] k_buf_0_val_4_addr_reg_1426;
reg   [10:0] k_buf_0_val_5_addr_reg_1432;
wire   [0:0] or_cond_i_fu_800_p2;
reg    ap_block_pp0_stage0_subdone;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_266;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_25_fu_789_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_128;
wire   [7:0] src_kernel_win_0_va_6_fu_924_p3;
reg   [7:0] src_kernel_win_0_va_1_fu_132;
reg   [7:0] src_kernel_win_0_va_2_fu_136;
wire   [7:0] src_kernel_win_0_va_7_fu_942_p3;
reg   [7:0] src_kernel_win_0_va_3_fu_140;
reg   [7:0] src_kernel_win_0_va_4_fu_144;
wire   [7:0] src_kernel_win_0_va_8_fu_960_p3;
reg   [7:0] src_kernel_win_0_va_5_fu_148;
reg   [7:0] right_border_buf_0_s_fu_152;
wire   [7:0] col_buf_0_val_0_0_fu_834_p3;
reg   [7:0] right_border_buf_0_1_fu_156;
reg   [7:0] right_border_buf_0_2_fu_160;
reg   [7:0] right_border_buf_0_3_fu_164;
wire   [7:0] col_buf_0_val_1_0_fu_852_p3;
reg   [7:0] right_border_buf_0_4_fu_168;
reg   [7:0] right_border_buf_0_5_fu_172;
wire   [7:0] col_buf_0_val_2_0_fu_870_p3;
wire   [31:0] tmp_3_fu_312_p2;
wire   [31:0] tmp_7_fu_324_p2;
wire   [30:0] tmp_10_fu_358_p4;
wire   [31:0] tmp_14_fu_391_p2;
wire   [0:0] tmp_15_fu_397_p3;
wire   [0:0] tmp_16_fu_411_p2;
wire   [0:0] rev_fu_405_p2;
wire   [0:0] tmp_17_fu_422_p3;
wire   [31:0] p_assign_7_fu_430_p2;
wire   [31:0] p_p2_i497_i_fu_436_p3;
wire   [31:0] p_assign_6_1_fu_454_p2;
wire   [0:0] tmp_19_fu_460_p3;
wire   [0:0] tmp_140_1_fu_474_p2;
wire   [0:0] rev1_fu_468_p2;
wire   [0:0] tmp_20_fu_485_p3;
wire   [31:0] p_assign_7_1_fu_493_p2;
wire   [31:0] p_p2_i497_i_1_fu_499_p3;
wire   [31:0] p_assign_6_2_fu_517_p2;
wire   [0:0] tmp_21_fu_523_p3;
wire   [0:0] tmp_140_2_fu_537_p2;
wire   [0:0] rev2_fu_531_p2;
wire   [0:0] tmp_22_fu_548_p3;
wire   [31:0] p_assign_7_2_fu_556_p2;
wire   [31:0] p_p2_i497_i_2_fu_562_p3;
wire   [0:0] tmp_18_fu_444_p2;
wire   [31:0] p_assign_8_fu_449_p2;
wire   [0:0] or_cond_i496_i_fu_416_p2;
wire   [31:0] p_p2_i497_i_p_assign_8_fu_580_p3;
wire   [31:0] y_fu_588_p3;
wire   [31:0] row_assign_9_fu_596_p2;
wire   [0:0] tmp_149_1_fu_507_p2;
wire   [31:0] p_assign_8_1_fu_512_p2;
wire   [0:0] or_cond_i496_i_1_fu_479_p2;
wire   [31:0] p_p2_i497_i_1_p_assig_fu_605_p3;
wire   [31:0] y_1_fu_613_p3;
wire   [31:0] row_assign_9_1_fu_621_p2;
wire   [0:0] tmp_149_2_fu_570_p2;
wire   [31:0] p_assign_8_2_fu_575_p2;
wire   [0:0] or_cond_i496_i_2_fu_542_p2;
wire   [31:0] p_p2_i497_i_2_p_assig_fu_630_p3;
wire   [31:0] y_2_fu_638_p3;
wire   [31:0] row_assign_9_2_fu_646_p2;
wire   [30:0] tmp_33_fu_666_p4;
wire   [31:0] ImagLoc_x_fu_682_p2;
wire   [0:0] tmp_34_fu_688_p3;
wire   [0:0] tmp_9_fu_702_p2;
wire   [0:0] rev3_fu_696_p2;
wire   [0:0] tmp_35_fu_713_p3;
wire   [31:0] p_assign_1_fu_721_p2;
wire   [31:0] p_p2_i_i_fu_727_p3;
wire   [31:0] p_assign_2_fu_740_p2;
wire   [0:0] tmp_9_not_fu_753_p2;
wire   [0:0] tmp_11_fu_735_p2;
wire   [0:0] sel_tmp7_fu_759_p2;
wire   [0:0] sel_tmp8_fu_765_p2;
wire   [31:0] p_assign_3_fu_745_p3;
wire   [31:0] x_fu_771_p3;
wire   [31:0] col_assign_1_fu_779_p2;
wire   [0:0] icmp1_fu_676_p2;
wire   [7:0] tmp_26_fu_823_p5;
wire   [7:0] tmp_27_fu_841_p5;
wire   [7:0] tmp_28_fu_859_p5;
wire   [7:0] tmp_29_fu_913_p5;
wire   [7:0] tmp_30_fu_931_p5;
wire   [7:0] tmp_31_fu_949_p5;
wire   [8:0] tmp_156_0_2_cast_fu_980_p1;
wire   [8:0] r_V_0_cast_fu_976_p1;
wire  signed [8:0] sum_V_0_2_fu_984_p2;
wire   [8:0] p_shl_fu_994_p3;
wire   [9:0] p_shl_cast_fu_1002_p1;
wire  signed [9:0] r_V_10_1_fu_1006_p2;
wire   [8:0] r_V_10_1_2_fu_1024_p3;
wire   [8:0] r_V_2_cast_fu_1042_p1;
wire  signed [8:0] r_V_10_2_fu_1046_p2;
wire  signed [10:0] tmp_156_2_cast_fu_1052_p1;
wire  signed [10:0] tmp_156_1_cast_fu_1012_p1;
wire   [9:0] tmp_156_2_2_cast_cas_fu_1060_p1;
wire  signed [9:0] sum_V_0_2_cast_cast_fu_990_p1;
wire   [9:0] tmp23_fu_1070_p2;
wire   [10:0] tmp_156_1_cast_63_fu_1032_p1;
wire  signed [10:0] tmp23_cast_fu_1076_p1;
wire   [10:0] tmp21_fu_1064_p2;
wire   [10:0] tmp22_fu_1080_p2;
wire   [10:0] p_Val2_s_fu_1086_p2;
wire   [7:0] tmp_41_fu_1020_p1;
wire   [7:0] tmp_40_fu_1016_p1;
wire   [7:0] tmp_43_fu_1056_p1;
wire   [7:0] tmp_42_fu_1036_p2;
wire   [7:0] tmp26_fu_1106_p2;
wire   [7:0] tmp24_fu_1100_p2;
wire   [7:0] tmp25_fu_1112_p2;
wire   [0:0] p_Result_s_fu_1092_p3;
wire   [2:0] tmp_36_fu_1124_p4;
wire   [0:0] not_i_i_fu_1140_p2;
wire   [0:0] tmp_i_i_fu_1134_p2;
wire   [0:0] overflow_fu_1146_p2;
wire   [0:0] tmp_1_i_i_fu_1160_p2;
wire   [7:0] p_mux_i_i_cast_fu_1152_p3;
wire   [7:0] p_Val2_1_fu_1118_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_118;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_enable_operation_145;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op159_store_state4;
reg    ap_enable_operation_159;
reg    ap_predicate_op166_store_state4;
reg    ap_enable_operation_166;
reg    ap_enable_operation_121;
reg    ap_enable_operation_148;
reg    ap_predicate_op157_store_state4;
reg    ap_enable_operation_157;
reg    ap_predicate_op164_store_state4;
reg    ap_enable_operation_164;
reg    ap_enable_operation_123;
reg    ap_enable_operation_151;
reg    ap_predicate_op155_store_state4;
reg    ap_enable_operation_155;
reg    ap_predicate_op163_store_state4;
reg    ap_enable_operation_163;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_877;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

ov5640_sobel_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ov5640_sobel_mux_hbi_U37(
    .din0(right_border_buf_0_s_fu_152),
    .din1(right_border_buf_0_1_fu_156),
    .din2(8'd0),
    .din3(tmp_37_reg_1419),
    .dout(tmp_26_fu_823_p5)
);

ov5640_sobel_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ov5640_sobel_mux_hbi_U38(
    .din0(right_border_buf_0_3_fu_164),
    .din1(right_border_buf_0_4_fu_168),
    .din2(8'd0),
    .din3(tmp_37_reg_1419),
    .dout(tmp_27_fu_841_p5)
);

ov5640_sobel_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ov5640_sobel_mux_hbi_U39(
    .din0(right_border_buf_0_5_fu_172),
    .din1(right_border_buf_0_2_fu_160),
    .din2(8'd0),
    .din3(tmp_37_reg_1419),
    .dout(tmp_28_fu_859_p5)
);

ov5640_sobel_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ov5640_sobel_mux_hbi_U40(
    .din0(col_buf_0_val_0_0_fu_834_p3),
    .din1(col_buf_0_val_1_0_fu_852_p3),
    .din2(col_buf_0_val_2_0_fu_870_p3),
    .din3(tmp_23_reg_1378),
    .dout(tmp_29_fu_913_p5)
);

ov5640_sobel_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ov5640_sobel_mux_hbi_U41(
    .din0(col_buf_0_val_0_0_fu_834_p3),
    .din1(col_buf_0_val_1_0_fu_852_p3),
    .din2(col_buf_0_val_2_0_fu_870_p3),
    .din3(tmp_24_reg_1383),
    .dout(tmp_30_fu_931_p5)
);

ov5640_sobel_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ov5640_sobel_mux_hbi_U42(
    .din0(col_buf_0_val_0_0_fu_834_p3),
    .din1(col_buf_0_val_1_0_fu_852_p3),
    .din2(col_buf_0_val_2_0_fu_870_p3),
    .din3(tmp_32_reg_1388),
    .dout(tmp_31_fu_949_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_655_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond461_i_fu_336_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((exitcond461_i_fu_336_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_277 <= j_V_fu_660_p2;
    end else if (((exitcond461_i_fu_336_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_277 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        t_V_reg_266 <= i_V_reg_1344;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_266 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1406 <= brmerge_fu_784_p2;
        k_buf_0_val_3_addr_reg_1413 <= tmp_25_fu_789_p1;
        k_buf_0_val_4_addr_reg_1426 <= tmp_25_fu_789_p1;
        k_buf_0_val_5_addr_reg_1432 <= tmp_25_fu_789_p1;
        or_cond_i_i_reg_1402 <= or_cond_i_i_fu_707_p2;
        or_cond_i_reg_1438 <= or_cond_i_fu_800_p2;
        tmp_37_reg_1419 <= tmp_37_fu_796_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond460_i_reg_1393 <= exitcond460_i_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1344 <= i_V_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_336_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1358 <= icmp_fu_368_p2;
        tmp_114_1_reg_1367 <= tmp_114_1_fu_380_p2;
        tmp_12_reg_1363 <= tmp_12_fu_374_p2;
        tmp_13_reg_1371 <= tmp_13_fu_386_p2;
        tmp_23_reg_1378 <= tmp_23_fu_601_p1;
        tmp_24_reg_1383 <= tmp_24_fu_626_p1;
        tmp_32_reg_1388 <= tmp_32_fu_651_p1;
        tmp_5_reg_1349 <= tmp_5_fu_347_p2;
        tmp_70_0_not_reg_1353 <= tmp_70_0_not_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_neg465_i_reg_1316 <= p_neg465_i_fu_300_p2;
        tmp_1_reg_1311 <= tmp_1_fu_294_p2;
        tmp_2_reg_1323 <= tmp_2_fu_306_p2;
        tmp_4_reg_1328[31 : 1] <= tmp_4_fu_318_p2[31 : 1];
        tmp_8_reg_1335[31 : 1] <= tmp_8_fu_330_p2[31 : 1];
        tmp_s_reg_1306 <= tmp_s_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_156 <= right_border_buf_0_s_fu_152;
        right_border_buf_0_2_fu_160 <= right_border_buf_0_5_fu_172;
        right_border_buf_0_3_fu_164 <= col_buf_0_val_1_0_fu_852_p3;
        right_border_buf_0_4_fu_168 <= right_border_buf_0_3_fu_164;
        right_border_buf_0_5_fu_172 <= col_buf_0_val_2_0_fu_870_p3;
        right_border_buf_0_s_fu_152 <= col_buf_0_val_0_0_fu_834_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_132 <= src_kernel_win_0_va_fu_128;
        src_kernel_win_0_va_2_fu_136 <= src_kernel_win_0_va_7_fu_942_p3;
        src_kernel_win_0_va_3_fu_140 <= src_kernel_win_0_va_2_fu_136;
        src_kernel_win_0_va_4_fu_144 <= src_kernel_win_0_va_8_fu_960_p3;
        src_kernel_win_0_va_5_fu_148 <= src_kernel_win_0_va_4_fu_144;
        src_kernel_win_0_va_fu_128 <= src_kernel_win_0_va_6_fu_924_p3;
    end
end

always @ (*) begin
    if ((((exitcond461_i_fu_336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_12_reg_1363 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_12_reg_1363 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_114_1_reg_1367 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_877)) begin
        if (((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((tmp_114_1_reg_1367 == 1'd1) & (icmp_reg_1358 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_114_1_reg_1367 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_12_reg_1363 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_877)) begin
        if (((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((tmp_12_reg_1363 == 1'd1) & (icmp_reg_1358 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_12_reg_1363 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1438 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op218_write_state4 == 1'b1))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op165_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op154_read_state4 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_682_p2 = ($signed(32'd4294967295) + $signed(t_V_2_reg_277));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_dst_data_stream_V_full_n == 1'b0) & (ap_predicate_op218_write_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op165_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op154_read_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_dst_data_stream_V_full_n == 1'b0) & (ap_predicate_op218_write_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op165_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op154_read_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_dst_data_stream_V_full_n == 1'b0) & (ap_predicate_op218_write_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op165_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op154_read_state4 == 1'b1))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_dst_data_stream_V_full_n == 1'b0) & (ap_predicate_op218_write_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op165_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op154_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_condition_877 = ((or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_118 = (exitcond460_i_fu_655_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_121 = (exitcond460_i_fu_655_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_123 = (exitcond460_i_fu_655_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_145 = (exitcond460_i_reg_1393 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_148 = (exitcond460_i_reg_1393 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_151 = (exitcond460_i_reg_1393 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_155 = (ap_predicate_op155_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_157 = (ap_predicate_op157_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_159 = (ap_predicate_op159_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_163 = (ap_predicate_op163_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_164 = (ap_predicate_op164_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_166 = (ap_predicate_op166_store_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op154_read_state4 = ((or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0));
end

always @ (*) begin
    ap_predicate_op155_store_state4 = ((tmp_12_reg_1363 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0));
end

always @ (*) begin
    ap_predicate_op157_store_state4 = ((tmp_114_1_reg_1367 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0));
end

always @ (*) begin
    ap_predicate_op159_store_state4 = ((tmp_12_reg_1363 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (icmp_reg_1358 == 1'd0) & (exitcond460_i_reg_1393 == 1'd0));
end

always @ (*) begin
    ap_predicate_op163_store_state4 = ((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_store_state4 = ((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0));
end

always @ (*) begin
    ap_predicate_op165_read_state4 = ((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_store_state4 = ((tmp_5_reg_1349 == 1'd1) & (icmp_reg_1358 == 1'd1) & (or_cond_i_i_reg_1402 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0));
end

always @ (*) begin
    ap_predicate_op218_write_state4 = ((or_cond_i_reg_1438 == 1'd1) & (exitcond460_i_reg_1393 == 1'd0));
end

assign brmerge_fu_784_p2 = (tmp_9_fu_702_p2 | tmp_70_0_not_reg_1353);

assign col_assign_1_fu_779_p2 = (tmp_2_reg_1323 - x_fu_771_p3);

assign col_buf_0_val_0_0_fu_834_p3 = ((brmerge_reg_1406[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_26_fu_823_p5);

assign col_buf_0_val_1_0_fu_852_p3 = ((brmerge_reg_1406[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_27_fu_841_p5);

assign col_buf_0_val_2_0_fu_870_p3 = ((brmerge_reg_1406[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_28_fu_859_p5);

assign exitcond460_i_fu_655_p2 = ((t_V_2_reg_277 == tmp_s_reg_1306) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_336_p2 = ((t_V_reg_266 == tmp_1_reg_1311) ? 1'b1 : 1'b0);

assign i_V_fu_341_p2 = (t_V_reg_266 + 32'd1);

assign icmp1_fu_676_p2 = ((tmp_33_fu_666_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_368_p2 = ((tmp_10_fu_358_p4 != 31'd0) ? 1'b1 : 1'b0);

assign j_V_fu_660_p2 = (t_V_2_reg_277 + 32'd1);

assign k_buf_0_val_3_address0 = tmp_25_fu_789_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1413;

assign k_buf_0_val_4_address0 = tmp_25_fu_789_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1426;

assign k_buf_0_val_5_address0 = tmp_25_fu_789_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1432;

assign not_i_i_fu_1140_p2 = ((tmp_36_fu_1124_p4 != 3'd0) ? 1'b1 : 1'b0);

assign or_cond_i496_i_1_fu_479_p2 = (tmp_140_1_fu_474_p2 & rev1_fu_468_p2);

assign or_cond_i496_i_2_fu_542_p2 = (tmp_140_2_fu_537_p2 & rev2_fu_531_p2);

assign or_cond_i496_i_fu_416_p2 = (tmp_16_fu_411_p2 & rev_fu_405_p2);

assign or_cond_i_fu_800_p2 = (icmp_reg_1358 & icmp1_fu_676_p2);

assign or_cond_i_i_fu_707_p2 = (tmp_9_fu_702_p2 & rev3_fu_696_p2);

assign overflow_fu_1146_p2 = (tmp_i_i_fu_1134_p2 & not_i_i_fu_1140_p2);

assign p_Result_s_fu_1092_p3 = p_Val2_s_fu_1086_p2[32'd10];

assign p_Val2_1_fu_1118_p2 = (tmp24_fu_1100_p2 + tmp25_fu_1112_p2);

assign p_Val2_s_fu_1086_p2 = (tmp21_fu_1064_p2 + tmp22_fu_1080_p2);

assign p_assign_1_fu_721_p2 = (32'd1 - t_V_2_reg_277);

assign p_assign_2_fu_740_p2 = (tmp_8_reg_1335 - p_p2_i_i_fu_727_p3);

assign p_assign_3_fu_745_p3 = ((or_cond_i_i_fu_707_p2[0:0] === 1'b1) ? ImagLoc_x_fu_682_p2 : p_assign_2_fu_740_p2);

assign p_assign_6_1_fu_454_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_266));

assign p_assign_6_2_fu_517_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_266));

assign p_assign_7_1_fu_493_p2 = (32'd2 - t_V_reg_266);

assign p_assign_7_2_fu_556_p2 = (32'd3 - t_V_reg_266);

assign p_assign_7_fu_430_p2 = (32'd1 - t_V_reg_266);

assign p_assign_8_1_fu_512_p2 = (tmp_4_reg_1328 - p_p2_i497_i_1_fu_499_p3);

assign p_assign_8_2_fu_575_p2 = (tmp_4_reg_1328 - p_p2_i497_i_2_fu_562_p3);

assign p_assign_8_fu_449_p2 = (tmp_4_reg_1328 - p_p2_i497_i_fu_436_p3);

assign p_dst_data_stream_V_din = ((tmp_1_i_i_fu_1160_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1152_p3 : p_Val2_1_fu_1118_p2);

assign p_mux_i_i_cast_fu_1152_p3 = ((tmp_i_i_fu_1134_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_neg465_i_fu_300_p2 = ($signed(32'd4294967295) + $signed(p_src_rows_V_read));

assign p_p2_i497_i_1_fu_499_p3 = ((tmp_20_fu_485_p3[0:0] === 1'b1) ? p_assign_7_1_fu_493_p2 : p_assign_6_1_fu_454_p2);

assign p_p2_i497_i_1_p_assig_fu_605_p3 = ((tmp_149_1_fu_507_p2[0:0] === 1'b1) ? p_p2_i497_i_1_fu_499_p3 : p_assign_8_1_fu_512_p2);

assign p_p2_i497_i_2_fu_562_p3 = ((tmp_22_fu_548_p3[0:0] === 1'b1) ? p_assign_7_2_fu_556_p2 : p_assign_6_2_fu_517_p2);

assign p_p2_i497_i_2_p_assig_fu_630_p3 = ((tmp_149_2_fu_570_p2[0:0] === 1'b1) ? p_p2_i497_i_2_fu_562_p3 : p_assign_8_2_fu_575_p2);

assign p_p2_i497_i_fu_436_p3 = ((tmp_17_fu_422_p3[0:0] === 1'b1) ? p_assign_7_fu_430_p2 : tmp_14_fu_391_p2);

assign p_p2_i497_i_p_assign_8_fu_580_p3 = ((tmp_18_fu_444_p2[0:0] === 1'b1) ? p_p2_i497_i_fu_436_p3 : p_assign_8_fu_449_p2);

assign p_p2_i_i_fu_727_p3 = ((tmp_35_fu_713_p3[0:0] === 1'b1) ? p_assign_1_fu_721_p2 : ImagLoc_x_fu_682_p2);

assign p_shl_cast_fu_1002_p1 = p_shl_fu_994_p3;

assign p_shl_fu_994_p3 = {{src_kernel_win_0_va_3_fu_140}, {1'd0}};

assign r_V_0_cast_fu_976_p1 = src_kernel_win_0_va_5_fu_148;

assign r_V_10_1_2_fu_1024_p3 = {{src_kernel_win_0_va_7_fu_942_p3}, {1'd0}};

assign r_V_10_1_fu_1006_p2 = (10'd0 - p_shl_cast_fu_1002_p1);

assign r_V_10_2_fu_1046_p2 = (9'd0 - r_V_2_cast_fu_1042_p1);

assign r_V_2_cast_fu_1042_p1 = src_kernel_win_0_va_1_fu_132;

assign rev1_fu_468_p2 = (tmp_19_fu_460_p3 ^ 1'd1);

assign rev2_fu_531_p2 = (tmp_21_fu_523_p3 ^ 1'd1);

assign rev3_fu_696_p2 = (tmp_34_fu_688_p3 ^ 1'd1);

assign rev_fu_405_p2 = (tmp_15_fu_397_p3 ^ 1'd1);

assign row_assign_9_1_fu_621_p2 = (p_neg465_i_reg_1316 - y_1_fu_613_p3);

assign row_assign_9_2_fu_646_p2 = (p_neg465_i_reg_1316 - y_2_fu_638_p3);

assign row_assign_9_fu_596_p2 = (p_neg465_i_reg_1316 - y_fu_588_p3);

assign sel_tmp7_fu_759_p2 = (tmp_9_not_fu_753_p2 | tmp_34_fu_688_p3);

assign sel_tmp8_fu_765_p2 = (tmp_11_fu_735_p2 & sel_tmp7_fu_759_p2);

assign src_kernel_win_0_va_6_fu_924_p3 = ((tmp_13_reg_1371[0:0] === 1'b1) ? tmp_29_fu_913_p5 : col_buf_0_val_0_0_fu_834_p3);

assign src_kernel_win_0_va_7_fu_942_p3 = ((tmp_13_reg_1371[0:0] === 1'b1) ? tmp_30_fu_931_p5 : col_buf_0_val_1_0_fu_852_p3);

assign src_kernel_win_0_va_8_fu_960_p3 = ((tmp_13_reg_1371[0:0] === 1'b1) ? tmp_31_fu_949_p5 : col_buf_0_val_2_0_fu_870_p3);

assign sum_V_0_2_cast_cast_fu_990_p1 = sum_V_0_2_fu_984_p2;

assign sum_V_0_2_fu_984_p2 = (tmp_156_0_2_cast_fu_980_p1 - r_V_0_cast_fu_976_p1);

assign tmp21_fu_1064_p2 = ($signed(tmp_156_2_cast_fu_1052_p1) + $signed(tmp_156_1_cast_fu_1012_p1));

assign tmp22_fu_1080_p2 = ($signed(tmp_156_1_cast_63_fu_1032_p1) + $signed(tmp23_cast_fu_1076_p1));

assign tmp23_cast_fu_1076_p1 = $signed(tmp23_fu_1070_p2);

assign tmp23_fu_1070_p2 = ($signed(tmp_156_2_2_cast_cas_fu_1060_p1) + $signed(sum_V_0_2_cast_cast_fu_990_p1));

assign tmp24_fu_1100_p2 = (tmp_41_fu_1020_p1 + tmp_40_fu_1016_p1);

assign tmp25_fu_1112_p2 = (tmp_42_fu_1036_p2 + tmp26_fu_1106_p2);

assign tmp26_fu_1106_p2 = (src_kernel_win_0_va_6_fu_924_p3 + tmp_43_fu_1056_p1);

assign tmp_10_fu_358_p4 = {{t_V_reg_266[31:1]}};

assign tmp_114_1_fu_380_p2 = ((t_V_reg_266 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_11_fu_735_p2 = (($signed(p_p2_i_i_fu_727_p3) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign tmp_12_fu_374_p2 = ((t_V_reg_266 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_13_fu_386_p2 = ((t_V_reg_266 > p_src_rows_V_read) ? 1'b1 : 1'b0);

assign tmp_140_1_fu_474_p2 = (($signed(p_assign_6_1_fu_454_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_140_2_fu_537_p2 = (($signed(p_assign_6_2_fu_517_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_149_1_fu_507_p2 = (($signed(p_p2_i497_i_1_fu_499_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_149_2_fu_570_p2 = (($signed(p_p2_i497_i_2_fu_562_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_14_fu_391_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_266));

assign tmp_156_0_2_cast_fu_980_p1 = src_kernel_win_0_va_8_fu_960_p3;

assign tmp_156_1_cast_63_fu_1032_p1 = r_V_10_1_2_fu_1024_p3;

assign tmp_156_1_cast_fu_1012_p1 = r_V_10_1_fu_1006_p2;

assign tmp_156_2_2_cast_cas_fu_1060_p1 = src_kernel_win_0_va_6_fu_924_p3;

assign tmp_156_2_cast_fu_1052_p1 = r_V_10_2_fu_1046_p2;

assign tmp_15_fu_397_p3 = tmp_14_fu_391_p2[32'd31];

assign tmp_16_fu_411_p2 = (($signed(tmp_14_fu_391_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_17_fu_422_p3 = tmp_14_fu_391_p2[32'd31];

assign tmp_18_fu_444_p2 = (($signed(p_p2_i497_i_fu_436_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_19_fu_460_p3 = p_assign_6_1_fu_454_p2[32'd31];

assign tmp_1_fu_294_p2 = (32'd2 + p_src_rows_V_read);

assign tmp_1_i_i_fu_1160_p2 = (p_Result_s_fu_1092_p3 | overflow_fu_1146_p2);

assign tmp_20_fu_485_p3 = p_assign_6_1_fu_454_p2[32'd31];

assign tmp_21_fu_523_p3 = p_assign_6_2_fu_517_p2[32'd31];

assign tmp_22_fu_548_p3 = p_assign_6_2_fu_517_p2[32'd31];

assign tmp_23_fu_601_p1 = row_assign_9_fu_596_p2[1:0];

assign tmp_24_fu_626_p1 = row_assign_9_1_fu_621_p2[1:0];

assign tmp_25_fu_789_p1 = x_fu_771_p3;

assign tmp_2_fu_306_p2 = (32'd3 + p_src_cols_V_read);

assign tmp_32_fu_651_p1 = row_assign_9_2_fu_646_p2[1:0];

assign tmp_33_fu_666_p4 = {{t_V_2_reg_277[31:1]}};

assign tmp_34_fu_688_p3 = ImagLoc_x_fu_682_p2[32'd31];

assign tmp_35_fu_713_p3 = ImagLoc_x_fu_682_p2[32'd31];

assign tmp_36_fu_1124_p4 = {{p_Val2_s_fu_1086_p2[10:8]}};

assign tmp_37_fu_796_p1 = col_assign_1_fu_779_p2[1:0];

assign tmp_3_fu_312_p2 = p_src_rows_V_read << 32'd1;

assign tmp_40_fu_1016_p1 = sum_V_0_2_fu_984_p2[7:0];

assign tmp_41_fu_1020_p1 = r_V_10_1_fu_1006_p2[7:0];

assign tmp_42_fu_1036_p2 = src_kernel_win_0_va_7_fu_942_p3 << 8'd1;

assign tmp_43_fu_1056_p1 = r_V_10_2_fu_1046_p2[7:0];

assign tmp_4_fu_318_p2 = (32'd2 + tmp_3_fu_312_p2);

assign tmp_5_fu_347_p2 = ((t_V_reg_266 < p_src_rows_V_read) ? 1'b1 : 1'b0);

assign tmp_70_0_not_fu_352_p2 = (tmp_5_fu_347_p2 ^ 1'd1);

assign tmp_7_fu_324_p2 = p_src_cols_V_read << 32'd1;

assign tmp_8_fu_330_p2 = ($signed(32'd4294967294) + $signed(tmp_7_fu_324_p2));

assign tmp_9_fu_702_p2 = (($signed(ImagLoc_x_fu_682_p2) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign tmp_9_not_fu_753_p2 = (tmp_9_fu_702_p2 ^ 1'd1);

assign tmp_i_i_fu_1134_p2 = (p_Result_s_fu_1092_p3 ^ 1'd1);

assign tmp_s_fu_288_p2 = (32'd2 + p_src_cols_V_read);

assign x_fu_771_p3 = ((sel_tmp8_fu_765_p2[0:0] === 1'b1) ? p_p2_i_i_fu_727_p3 : p_assign_3_fu_745_p3);

assign y_1_fu_613_p3 = ((or_cond_i496_i_1_fu_479_p2[0:0] === 1'b1) ? p_assign_6_1_fu_454_p2 : p_p2_i497_i_1_p_assig_fu_605_p3);

assign y_2_fu_638_p3 = ((or_cond_i496_i_2_fu_542_p2[0:0] === 1'b1) ? p_assign_6_2_fu_517_p2 : p_p2_i497_i_2_p_assig_fu_630_p3);

assign y_fu_588_p3 = ((or_cond_i496_i_fu_416_p2[0:0] === 1'b1) ? tmp_14_fu_391_p2 : p_p2_i497_i_p_assign_8_fu_580_p3);

always @ (posedge ap_clk) begin
    tmp_4_reg_1328[0] <= 1'b0;
    tmp_8_reg_1335[0] <= 1'b0;
end

endmodule //Filter2D
